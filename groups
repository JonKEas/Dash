<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Groups Management - Polar Health Analytics</title>
    <link rel="stylesheet" href="styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <style>
        /* Additional styles specific to the groups page */
        .group-container {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
        }

        .group-list {
            flex: 1;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: var(--card-shadow);
            overflow: hidden;
        }

        .group-detail {
            flex: 2;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: var(--card-shadow);
            overflow: hidden;
        }

        .group-item {
            padding: 15px;
            border-bottom: 1px solid var(--border-color);
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .group-item:hover {
            background-color: rgba(0, 102, 204, 0.05);
        }

        .group-item.active {
            background-color: rgba(0, 102, 204, 0.1);
            border-left: 3px solid var(--primary-color);
        }

        .group-item h4 {
            margin-bottom: 5px;
            display: flex;
            justify-content: space-between;
        }

        .group-item p {
            color: var(--text-light);
            font-size: 0.9rem;
        }

        .group-detail-content {
            padding: 20px;
        }

        .group-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .group-header h3 {
            font-size: 1.3rem;
        }

        .member-list {
            margin-bottom: 30px;
        }

        .member-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid var(--border-color);
        }

        .member-info {
            display: flex;
            align-items: center;
        }

        .member-info img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 15px;
        }

        .member-actions {
            display: flex;
            gap: 10px;
        }

        .add-form {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .form-row {
            display: flex;
            gap: 15px;
            margin-bottom: 15px;
        }

        .form-group {
            flex: 1;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }

        .form-group input, .form-group select {
            width: 100%;
            padding: 10px;
            border: 1px solid var(--border-color);
            border-radius: 5px;
            font-size: 0.9rem;
        }

        .btn-group {
            display: flex;
            gap: 10px;
        }

        .btn.secondary {
            background-color: #6c757d;
            color: #fff;
        }

        .btn.danger {
            background-color: var(--danger-color);
            color: #fff;
        }

        .empty-state {
            text-align: center;
            padding: 40px 20px;
            color: var(--text-light);
        }

        .empty-state i {
            font-size: 3rem;
            margin-bottom: 15px;
            opacity: 0.3;
        }

        .empty-state h4 {
            margin-bottom: 10px;
        }

        .threshold-settings {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-top: 30px;
        }

        .threshold-settings h4 {
            margin-bottom: 15px;
        }

        .threshold-row {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        .threshold-row label {
            width: 180px;
        }

        .threshold-row input {
            width: 80px;
            padding: 5px 10px;
            border: 1px solid var(--border-color);
            border-radius: 5px;
            margin: 0 10px;
        }

        .create-group-btn {
            position: fixed;
            bottom: 30px;
            right: 30px;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background-color: var(--primary-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            cursor: pointer;
            border: none;
            font-size: 1.5rem;
            transition: transform 0.2s;
        }

        .create-group-btn:hover {
            transform: scale(1.05);
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: white;
            border-radius: 10px;
            width: 500px;
            max-width: 90%;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .modal-header {
            padding: 15px 20px;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-header h3 {
            font-size: 1.2rem;
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 1.2rem;
            cursor: pointer;
            color: var(--text-light);
        }

        .modal-body {
            padding: 20px;
        }

        .modal-footer {
            padding: 15px 20px;
            border-top: 1px solid var(--border-color);
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Sidebar Navigation -->
        <nav class="sidebar">
            <div class="logo">
                <img src="logo.png" alt="Polar Analytics Logo">
                <h2>Polar Analytics</h2>
            </div>
            <ul class="nav-links">
                <li><a href="index.html"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
                <li><a href="#team"><i class="fas fa-users"></i> Team Overview</a></li>
                <li><a href="#individual"><i class="fas fa-user"></i> Individual Analysis</a></li>
                <li><a href="#trends"><i class="fas fa-chart-line"></i> Trends</a></li>
                <li><a href="#alerts"><i class="fas fa-bell"></i> Alerts</a></li>
                <li class="active"><a href="groups.html"><i class="fas fa-layer-group"></i> Groups</a></li>
                <li><a href="#reports"><i class="fas fa-file-alt"></i> Reports</a></li>
                <li><a href="#settings"><i class="fas fa-cog"></i> Settings</a></li>
            </ul>
            <div class="sidebar-footer">
                <p>Powered by Polar</p>
            </div>
        </nav>

        <!-- Main Content Area -->
        <main class="main-content">
            <header>
                <div class="header-left">
                    <h1>Groups Management</h1>
                    <p>Create and manage employee groups</p>
                </div>
                <div class="header-right">
                    <div class="date-picker">
                        <i class="fas fa-calendar"></i>
                        <span>Apr 29, 2025</span>
                    </div>
                    <div class="user-profile">
                        <img src="https://via.placeholder.com/40" alt="User Profile">
                        <span>John Doe</span>
                    </div>
                </div>
            </header>

            <!-- Groups Management Section -->
            <section class="group-container">
                <!-- Group List -->
                <div class="group-list">
                    <div class="section-header">
                        <h3>Your Groups</h3>
                        <button class="btn-icon" id="refreshGroups"><i class="fas fa-sync-alt"></i></button>
                    </div>
                    <div id="groupsList">
                        <div class="group-item active" data-group-id="1">
                            <h4>Mining Team Alpha <span class="badge blue">12</span></h4>
                            <p>Underground operations</p>
                        </div>
                        <div class="group-item" data-group-id="2">
                            <h4>Logistics Crew <span class="badge green">8</span></h4>
                            <p>Transportation division</p>
                        </div>
                        <div class="group-item" data-group-id="3">
                            <h4>Heavy Equipment <span class="badge orange">15</span></h4>
                            <p>Machinery operators</p>
                        </div>
                    </div>
                </div>

                <!-- Group Details -->
                <div class="group-detail">
                    <div class="group-detail-content" id="groupDetail">
                        <div class="group-header">
                            <h3>Mining Team Alpha</h3>
                            <div class="btn-group">
                                <button class="btn secondary" id="editGroupBtn"><i class="fas fa-edit"></i> Edit Group</button>
                                <button class="btn danger" id="deleteGroupBtn"><i class="fas fa-trash"></i> Delete</button>
                            </div>
                        </div>

                        <!-- Add Member Form -->
                        <div class="add-form">
                            <h4>Add New Member</h4>
                            <div class="form-row">
                                <div class="form-group">
                                    <label for="memberEmail">Email Address</label>
                                    <input type="email" id="memberEmail" placeholder="employee@company.com">
                                </div>
                                <div class="form-group">
                                    <label for="memberRole">Role</label>
                                    <select id="memberRole">
                                        <option value="member">Team Member</option>
                                        <option value="lead">Team Lead</option>
                                        <option value="manager">Manager</option>
                                    </select>
                                </div>
                            </div>
                            <button class="btn primary" id="addMemberBtn"><i class="fas fa-plus"></i> Add Member</button>
                        </div>

                        <!-- Members List -->
                        <div class="member-list">
                            <h4>Members (12)</h4>
                            <div class="member-item">
                                <div class="member-info">
                                    <img src="https://via.placeholder.com/40" alt="Member">
                                    <div>
                                        <h5>Michael Johnson</h5>
                                        <p>michael.johnson@company.com</p>
                                    </div>
                                </div>
                                <div class="member-actions">
                                    <span class="status-pill green">Team Lead</span>
                                    <button class="btn-icon"><i class="fas fa-ellipsis-v"></i></button>
                                </div>
                            </div>
                            <div class="member-item">
                                <div class="member-info">
                                    <img src="https://via.placeholder.com/40" alt="Member">
                                    <div>
                                        <h5>Sarah Williams</h5>
                                        <p>sarah.williams@company.com</p>
                                    </div>
                                </div>
                                <div class="member-actions">
                                    <span class="status-pill blue">Member</span>
                                    <button class="btn-icon"><i class="fas fa-ellipsis-v"></i></button>
                                </div>
                            </div>
                            <div class="member-item">
                                <div class="member-info">
                                    <img src="https://via.placeholder.com/40" alt="Member">
                                    <div>
                                        <h5>David Chen</h5>
                                        <p>david.chen@company.com</p>
                                    </div>
                                </div>
                                <div class="member-actions">
                                    <span class="status-pill blue">Member</span>
                                    <button class="btn-icon"><i class="fas fa-ellipsis-v"></i></button>
                                </div>
                            </div>
                        </div>

                        <!-- Group Thresholds -->
                        <div class="threshold-settings">
                            <h4>Group Health Thresholds</h4>
                            <p>Set custom health thresholds for this group. Alerts will be triggered when values exceed these thresholds.</p>

                            <div class="threshold-row">
                                <label>Recovery Score Warning:</label>
                                <input type="number" id="recoveryWarning" value="65" min="0" max="100"> %
                                <span>(Critical below 50%)</span>
                            </div>
                            <div class="threshold-row">
                                <label>Minimum Sleep Duration:</label>
                                <input type="number" id="sleepMin" value="6" min="0" max="12"> hours
                            </div>
                            <div class="threshold-row">
                                <label>Maximum Heart Rate:</label>
                                <input type="number" id="maxHR" value="160" min="100" max="220"> bpm
                            </div>
                            <div class="threshold-row">
                                <label>Minimum HRV:</label>
                                <input type="number" id="minHRV" value="25" min="0" max="100"> ms
                            </div>
                            <div class="threshold-row">
                                <label>Maximum Temperature:</label>
                                <input type="number" id="maxTemp" value="38.2" min="35" max="42" step="0.1"> °C
                            </div>

                            <button class="btn primary" id="saveThresholdsBtn"><i class="fas fa-save"></i> Save Thresholds</button>
                        </div>
                    </div>
                </div>
            </section>
        </main>
    </div>

    <!-- Create Group Button -->
    <button class="create-group-btn" id="createGroupBtn">
        <i class="fas fa-plus"></i>
    </button>

    <!-- Create Group Modal -->
    <div class="modal" id="createGroupModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Create New Group</h3>
                <button class="modal-close" id="closeModal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="groupName">Group Name</label>
                    <input type="text" id="groupName" placeholder="Enter group name">
                </div>
                <div class="form-group">
                    <label for="groupDescription">Description</label>
                    <input type="text" id="groupDescription" placeholder="Brief description of the group">
                </div>
                <div class="form-group">
                    <label for="groupDepartment">Department</label>
                    <select id="groupDepartment">
                        <option value="mining">Mining Operations</option>
                        <option value="logistics">Logistics</option>
                        <option value="equipment">Heavy Equipment</option>
                        <option value="safety">Safety Team</option>
                        <option value="management">Management</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn secondary" id="cancelCreateGroup">Cancel</button>
                <button class="btn primary" id="confirmCreateGroup">Create Group</button>
            </div>
        </div>
    </div>

    <script>
        // Wait for the DOM to be fully loaded
        document.addEventListener('DOMContentLoaded', function() {
            // Get DOM elements
            const createGroupBtn = document.getElementById('createGroupBtn');
            const createGroupModal = document.getElementById('createGroupModal');
            const closeModal = document.getElementById('closeModal');
            const cancelCreateGroup = document.getElementById('cancelCreateGroup');
            const confirmCreateGroup = document.getElementById('confirmCreateGroup');
            const groupsList = document.getElementById('groupsList');
            const groupItems = document.querySelectorAll('.group-item');
            const addMemberBtn = document.getElementById('addMemberBtn');
            const memberEmail = document.getElementById('memberEmail');
            const memberRole = document.getElementById('memberRole');
            const saveThresholdsBtn = document.getElementById('saveThresholdsBtn');
            const editGroupBtn = document.getElementById('editGroupBtn');
            const deleteGroupBtn = document.getElementById('deleteGroupBtn');

            // Sample data for groups
            let groups = [
                {
                    id: 1,
                    name: 'Mining Team Alpha',
                    description: 'Underground operations',
                    members: 12,
                    department: 'mining'
                },
                {
                    id: 2,
                    name: 'Logistics Crew',
                    description: 'Transportation division',
                    members: 8,
                    department: 'logistics'
                },
                {
                    id: 3,
                    name: 'Heavy Equipment',
                    description: 'Machinery operators',
                    members: 15,
                    department: 'equipment'
                }
            ];

            // Open create group modal
            createGroupBtn.addEventListener('click', function() {
                createGroupModal.style.display = 'flex';
            });

            // Close modal functions
            function closeCreateGroupModal() {
                createGroupModal.style.display = 'none';
                // Reset form
                document.getElementById('groupName').value = '';
                document.getElementById('groupDescription').value = '';
                document.getElementById('groupDepartment').value = 'mining';
            }

            closeModal.addEventListener('click', closeCreateGroupModal);
            cancelCreateGroup.addEventListener('click', closeCreateGroupModal);

            // Close modal when clicking outside
            window.addEventListener('click', function(event) {
                if (event.target === createGroupModal) {
                    closeCreateGroupModal();
                }
            });

            // Create new group
            confirmCreateGroup.addEventListener('click', function() {
                const name = document.getElementById('groupName').value.trim();
                const description = document.getElementById('groupDescription').value.trim();
                const department = document.getElementById('groupDepartment').value;

                if (name === '') {
                    alert('Please enter a group name');
                    return;
                }

                // Create new group object
                const newGroup = {
                    id: groups.length + 1,
                    name: name,
                    description: description,
                    members: 0,
                    department: department
                };

                // Add to groups array
                groups.push(newGroup);

                // Add to DOM
                const groupItem = document.createElement('div');
                groupItem.className = 'group-item';
                groupItem.setAttribute('data-group-id', newGroup.id);
                groupItem.innerHTML = `
                    <h4>${newGroup.name} <span class="badge blue">0</span></h4>
                    <p>${newGroup.description}</p>
                `;

                groupsList.appendChild(groupItem);

                // Add click event to new group
                groupItem.addEventListener('click', function() {
                    selectGroup(this);
                });

                // Close modal
                closeCreateGroupModal();

                // Select the new group
                selectGroup(groupItem);
            });

            // Select group function
            function selectGroup(groupElement) {
                // Remove active class from all groups
                groupItems.forEach(item => {
                    item.classList.remove('active');
                });

                // Add active class to selected group
                groupElement.classList.add('active');

                // Get group ID
                const groupId = groupElement.getAttribute('data-group-id');

                // Find group in array
                const group = groups.find(g => g.id == groupId);

                // Update group detail view
                if (group) {
                    document.querySelector('.group-header h3').textContent = group.name;
                    document.querySelector('.member-list h4').textContent = `Members (${group.members})`;
                }
            }

            // Add click event to existing groups
            groupItems.forEach(item => {
                item.addEventListener('click', function() {
                    selectGroup(this);
                });
            });

            // Add member function
            addMemberBtn.addEventListener('click', function() {
                const email = memberEmail.value.trim();
                const role = memberRole.value;

                if (email === '') {
                    alert('Please enter an email address');
                    return;
                }

                // In a real application, you would validate the email and check if the user exists

                // Create new member element
                const memberItem = document.createElement('div');
                memberItem.className = 'member-item';

                // Extract name from email (for demo purposes)
                const nameParts = email.split('@')[0].split('.');
                const firstName = nameParts[0].charAt(0).toUpperCase() + nameParts[0].slice(1);
                const lastName = nameParts.length > 1 ? nameParts[1].charAt(0).toUpperCase() + nameParts[1].slice(1) : '';
                const fullName = firstName + (lastName ? ' ' + lastName : '');

                // Set role class and text
                let roleClass = 'blue';
                let roleText = 'Member';

                if (role === 'lead') {
                    roleClass = 'green';
                    roleText = 'Team Lead';
                } else if (role === 'manager') {
                    roleClass = 'orange';
                    roleText = 'Manager';
                }

                memberItem.innerHTML = `
                    <div class="member-info">
                        <img src="https://via.placeholder.com/40" alt="Member">
                        <div>
                            <h5>${fullName}</h5>
                            <p>${email}</p>
                        </div>
                    </div>
                    <div class="member-actions">
                        <span class="status-pill ${roleClass}">${roleText}</span>
                        <button class="btn-icon"><i class="fas fa-ellipsis-v"></i></button>
                    </div>
                `;

                // Add to member list
                document.querySelector('.member-list').appendChild(memberItem);

                // Update member count for active group
                const activeGroup = document.querySelector('.group-item.active');
                if (activeGroup) {
                    const groupId = activeGroup.getAttribute('data-group-id');
                    const group = groups.find(g => g.id == groupId);
                    if (group) {
                        group.members++;
                        activeGroup.querySelector('.badge').textContent = group.members;
                        document.querySelector('.member-list h4').textContent = `Members (${group.members})`;
                    }
                }

                // Clear input
                memberEmail.value = '';
                memberRole.value = 'member';
            });

            // Save thresholds
            saveThresholdsBtn.addEventListener('click', function() {
                alert('Thresholds saved successfully!');
                // In a real application, you would save these values to a database
            });

            // Edit group
            editGroupBtn.addEventListener('click', function() {
                const activeGroup = document.querySelector('.group-item.active');
                if (activeGroup) {
                    const groupId = activeGroup.getAttribute('data-group-id');
                    const group = groups.find(g => g.id == groupId);

                    if (group) {
                        const newName = prompt('Enter new group name:', group.name);
                        if (newName && newName.trim() !== '') {
                            group.name = newName.trim();
                            activeGroup.querySelector('h4').innerHTML = `${group.name} <span class="badge blue">${group.members}</span>`;
                            document.querySelector('.group-header h3').textContent = group.name;
                        }
                    }
                }
            });

            // Delete group
            deleteGroupBtn.addEventListener('click', function() {
                const activeGroup = document.querySelector('.group-item.active');
                if (activeGroup) {
                    if (confirm('Are you sure you want to delete this group?')) {
                        const groupId = activeGroup.getAttribute('data-group-id');

                        // Remove from array
                        groups = groups.filter(g => g.id != groupId);

                        // Remove from DOM
                        activeGroup.remove();

                        // Select first group if available
                        const firstGroup = document.querySelector('.group-item');
                        if (firstGroup) {
                            selectGroup(firstGroup);
                        } else {
                            // Show empty state
                            document.getElementById('groupDetail').innerHTML = `
                                <div class="empty-state">
                                    <i class="fas fa-users"></i>
                                    <h4>No Groups Available</h4>
                                    <p>Create a new group to get started</p>
                                    <button class="btn primary" id="emptyStateCreateBtn">Create Group</button>
                                </div>
                            `;

                            // Add event listener to empty state button
                            document.getElementById('emptyStateCreateBtn').addEventListener('click', function() {
                                createGroupModal.style.display = 'flex';
                            });
                        }
                    }
                }
            });
        });
    </script>
</body>
</html>
